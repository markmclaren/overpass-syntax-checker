name: Deploy to PyPI

on:
    workflow_dispatch:
        inputs:
            environment:
                description: "Deployment environment"
                required: true
                default: "test"
                type: choice
                options:
                    - test
                    - production
            version_bump:
                description: "Version bump type (if needed)"
                required: false
                default: "none"
                type: choice
                options:
                    - none
                    - patch
                    - minor
                    - major

jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: ${{ github.event.inputs.environment }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install build dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install build twine

            - name: Install package dependencies
              run: |
                  pip install -e ".[dev]"

            - name: Run tests before deployment
              run: |
                  python -m pytest tests/ -v --tb=short

            - name: Run quality checks
              run: |
                  black --check src/ tests/ examples/
                  isort --check-only src/ tests/ examples/
                  flake8 src/ tests/ examples/

            - name: Build package
              run: |
                  python -m build

            - name: Get package version
              id: get_version
              run: |
                  pip install toml
                  VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

            - name: Check package
              run: |
                  python -m twine check dist/*

            - name: Deploy to Test PyPI
              if: github.event.inputs.environment == 'test'
              env:
                  TWINE_USERNAME: __token__
                  TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
              run: |
                  python -m twine upload --repository testpypi dist/*

            - name: Deploy to Production PyPI
              if: github.event.inputs.environment == 'production'
              env:
                  TWINE_USERNAME: __token__
                  TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
              run: |
                  python -m twine upload dist/*

            - name: Create GitHub Release
              if: github.event.inputs.environment == 'production'
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: v${{ steps.get_version.outputs.version }}
                  name: Release v${{ steps.get_version.outputs.version }}
                  body: |
                      Release of overpass-ql-checker v${{ steps.get_version.outputs.version }}

                      See [CHANGELOG.md](CHANGELOG.md) for details.
                  files: dist/*
                  draft: false
                  prerelease: false

            - name: Upload build artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: dist-files
                  path: dist/
                  retention-days: 30
