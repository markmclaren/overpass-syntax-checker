name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        exclude:
          # Python 3.7 is not available on newer macOS runners
          - os: macos-latest
            python-version: "3.7"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Install test dependencies
      run: |
        pip install pytest pytest-cov

    - name: Run package tests
      run: |
        python -m pytest tests/ -v --tb=short

    - name: Run CLI built-in tests
      run: |
        overpass-ql-check --test

    - name: Test CLI functionality
      run: |
        # Test valid query
        overpass-ql-check "node[amenity=restaurant];out;"
        
        # Test invalid query (should fail)
        if overpass-ql-check "node[amenity=restaurant]"; then
          echo "ERROR: Invalid query was accepted as valid"
          exit 1
        else
          echo "SUCCESS: Invalid query correctly rejected"
        fi
        
        # Test verbose mode
        overpass-ql-check --verbose "node[amenity=cafe];out;"
        
        # Test file input (create a test file)
        echo "node[amenity=shop];out;" > test_query.overpass
        overpass-ql-check -f test_query.overpass
        rm test_query.overpass

    - name: Test module import
      run: |
        python -c "from overpass_ql_checker import OverpassQLSyntaxChecker; print('Import successful')"
        python -c "
        from overpass_ql_checker import OverpassQLSyntaxChecker
        checker = OverpassQLSyntaxChecker()
        result = checker.check_syntax('node[amenity=restaurant];out;')
        assert result['valid'] == True, 'Basic query validation failed'
        print('API test successful')
        "

    - name: Test console script entry point
      run: |
        which overpass-ql-check
        overpass-ql-check --version || true

  # Separate job for testing the build process
  build-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check distribution
      run: |
        twine check dist/*

    - name: Test installation from wheel
      run: |
        pip install dist/*.whl
        overpass-ql-check --test

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 7

  # Job to test examples
  examples-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Test examples
      run: |
        python examples/example_usage.py